<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AsSedes extends \Entities\AsSedes implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'sed_Codigo', 'sed_Alias', 'sed_Nombre', 'sed_Direccion', 'sed_Descripcion', 'sed_Activo');
        }

        return array('__isInitialized__', 'sed_Codigo', 'sed_Alias', 'sed_Nombre', 'sed_Direccion', 'sed_Descripcion', 'sed_Activo');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AsSedes $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getSed_Codigo()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getSed_Codigo();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSed_Codigo', array());

        return parent::getSed_Codigo();
    }

    /**
     * {@inheritDoc}
     */
    public function setSed_Codigo($sed_Codigo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSed_Codigo', array($sed_Codigo));

        return parent::setSed_Codigo($sed_Codigo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSed_Alias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSed_Alias', array());

        return parent::getSed_Alias();
    }

    /**
     * {@inheritDoc}
     */
    public function setSed_Alias($sed_Alias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSed_Alias', array($sed_Alias));

        return parent::setSed_Alias($sed_Alias);
    }

    /**
     * {@inheritDoc}
     */
    public function getSed_Nombre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSed_Nombre', array());

        return parent::getSed_Nombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setSed_Nombre($sed_Nombre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSed_Nombre', array($sed_Nombre));

        return parent::setSed_Nombre($sed_Nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getSed_Direccion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSed_Direccion', array());

        return parent::getSed_Direccion();
    }

    /**
     * {@inheritDoc}
     */
    public function setSed_Direccion($sed_Direccion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSed_Direccion', array($sed_Direccion));

        return parent::setSed_Direccion($sed_Direccion);
    }

    /**
     * {@inheritDoc}
     */
    public function getSed_Descripcion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSed_Descripcion', array());

        return parent::getSed_Descripcion();
    }

    /**
     * {@inheritDoc}
     */
    public function setSed_Descripcion($sed_Descripcion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSed_Descripcion', array($sed_Descripcion));

        return parent::setSed_Descripcion($sed_Descripcion);
    }

    /**
     * {@inheritDoc}
     */
    public function getSed_Activo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSed_Activo', array());

        return parent::getSed_Activo();
    }

    /**
     * {@inheritDoc}
     */
    public function setSed_Activo($sed_Activo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSed_Activo', array($sed_Activo));

        return parent::setSed_Activo($sed_Activo);
    }

}
